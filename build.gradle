/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'jacoco'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.1.2.RELEASE'
    implementation 'org.springframework.security:spring-security-web:5.1.3.RELEASE'
    implementation 'org.springframework.security:spring-security-config:5.1.3.RELEASE'
    implementation 'org.springframework.data:spring-data-mongodb:2.1.4.RELEASE'
    implementation 'org.springframework:spring-orm:5.1.4.RELEASE'
    implementation 'org.springframework:spring-aop:5.1.4.RELEASE'
    implementation 'org.hibernate:hibernate-core:5.4.1.Final'
    implementation 'org.hibernate:hibernate-entitymanager:5.4.1.Final'
    implementation 'org.hibernate:hibernate-commons-annotations:3.2.0.Final'
    implementation 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final'
    implementation 'javax.transaction:jta:1.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.2'
    implementation 'org.apache.commons:commons-lang3:3.3.2'
    implementation 'javax.el:javax.el-api:2.2.4'
    implementation 'org.glassfish.web:javax.el:2.2.4'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.24.0'
    testImplementation 'org.mockito:mockito-core:2.24.0'
    testImplementation 'org.springframework:spring-test:5.1.4.RELEASE'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

group = 'com.topup'
version = '1.0-SNAPSHOT'
description = 'TopUp-Services'
java.sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
